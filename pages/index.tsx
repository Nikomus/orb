import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { useEffect, useState } from 'react';

export default function Home() {
  const [started, setStarted] = useState(false);
  const [currentTime, setcurrentTime] = useState(0);
  const [minutes, setMinutes] = useState(30);

  const timey = () => {
    setcurrentTime(currentTime + 1000);

    if (currentTime / 1000 === minutes * 60) {
      console.log('beep');
      setcurrentTime(0);
      window.open(
        `https://www.twitch.tv/seaofthieves`,
        '_blank',
        'height=600, width=1200'
      );
    }
  };

  useEffect(() => {
    const timer = setTimeout(() => {
      if (started) {
        timey();
      }
    }, 1000);

    return () => clearTimeout(timer);
  });

  const handleClick = (e: React.FormEvent<HTMLButtonElement>) => {
    e.preventDefault;
    if (!started) {
      window.open(
        `https://www.twitch.tv/seaofthieves`,
        '_blank',
        'height=600, width=1200'
      );
    }
    setcurrentTime(0);
    setStarted(!started);
  };

  const updateMins = (e: React.FormEvent<HTMLInputElement>) => {
    const mins = parseInt(e.currentTarget.value);
    setMinutes(mins);
  };

  return (
    <>
      <Head>
        <title>Seas of Thieves Orb Helper</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className={styles.main}>
        <h1>
          <span>Captain Nikomus&apos;s</span>
          <br />
          Seas of Thieves Orb Helper
        </h1>

        <div className={styles.intro}>
          <div>
            <p>
              The Orb has returned with more festive drops at{' '}
              <a
                href='https://www.twitch.tv/seaofthieves'
                target='_blank'
                rel='noopener noreferrer'
              >
                twitch.tv/seaofthieves
              </a>
              ! To help you plunder them all, use this site to periodically
              re-open the stream to get to the next raid target.
            </p>
            <p>
              <span>You must enable pop-ups for this to work.</span> You can see
              how to do this in your browser here:{' '}
              <a
                href='https://support.google.com/chrome/answer/95472?hl=en-GB&co=GENIE.Platform%3DDesktop#zippy=%2Callow-pop-ups-and-redirects-from-a-site'
                target='_blank'
                rel='noopener noreferrer'
              >
                Chrome
              </a>{' '}
              <a
                href='https://www.howtogeek.com/732439/how-to-allow-pop-ups-in-microsoft-edge/'
                target='_blank'
                rel='noopener noreferrer'
              >
                Edge
              </a>{' '}
              <a
                href='https://support.apple.com/en-gb/guide/safari/sfri40696/mac#:~:text=In%20the%20Safari%20app%20on,the%20bottom%20of%20the%20list.'
                target='_blank'
                rel='noopener noreferrer'
              >
                Safari
              </a>{' '}
              <a
                href='https://support.mozilla.org/en-US/kb/pop-blocker-settings-exceptions-troubleshooting'
                target='_blank'
                rel='noopener noreferrer'
              >
                Firefox
              </a>
            </p>
          </div>
          <img src='/orb.png' alt='The orb' />
        </div>

        <form className={styles.form}>
          <h2>Open the stream</h2>
          <label>
            Minutes until stream opens again:
            <input
              type='number'
              min='1'
              max='60'
              value={minutes}
              onChange={updateMins}
              className={styles.input}
            ></input>
          </label>
          <progress
            id='file'
            max={minutes * 60}
            value={currentTime / 1000}
          ></progress>
          <button onClick={handleClick} className={styles.button} type='button'>
            {started ? 'Stop' : 'Go!'}
          </button>
        </form>

        <div>
          <h2>Tips</h2>
          <ul>
            <li>You need to be signed in to Twitch in this browser.</li>
            <li>
              Keep this window open in the foreground. If the tab goes to sleep
              it will stop counting down to the next stream opening.
            </li>
            <li>
              Consider reducing the video quality of the stream, the longer
              you&apos;re AFK the more windows will be opened.
            </li>
            <li>
              Don&apos;t forget to{' '}
              <a
                href='https://www.twitch.tv/drops/inventory'
                target='_blank'
                rel='noopener noreferrer'
              >
                claim the drops
              </a>{' '}
              afterwards!
            </li>
          </ul>
        </div>
      </main>
      <footer className={styles.footer}>
        <p>
          Made by{' '}
          <a
            href='http://twitter.com/nikomus'
            target='_blank'
            rel='noopener noreferrer'
          >
            @nikomus
          </a>
        </p>
      </footer>
    </>
  );
}
